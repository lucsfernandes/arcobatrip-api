services:
  arcobatrip-api:
    image: ${DOCKERHUB_USER}/arcobatrip-api:latest
    container_name: arcobatrip-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - TYPEORM_HOST=${TYPEORM_HOST}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_SYNC=${TYPEORM_SYNC}
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.arcobatrip.rule=Host(`arcobatrip.arcobatrox.com.br`) && PathPrefix(`/api`)
      - traefik.http.routers.arcobatrip.entrypoints=websecure
      - traefik.http.routers.arcobatrip.service=arcobatrip-api
      - traefik.http.routers.arcobatrip.tls.certresolver=letsencryptresolver
      - traefik.http.services.arcobatrip-api.loadbalancer.server.port=3000
      - traefik.http.middlewares.arcobatrip-strip-prefix.stripprefix.prefixes=/api
      - traefik.http.routers.arcobatrip.middlewares=arcobatrip-strip-prefix
    networks:
      - arcobatroxnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  arcobatroxnet: ## Nome da rede interna
    external: true
    name: arcobatroxnet ## Nome da rede interna
