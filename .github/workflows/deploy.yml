name: CI/CD Deploy to VPS with Portainer

on:
  push:
   branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USER }}/arcobatrip-api:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Copy docker-compose to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/${{ secrets.VPS_USER }}/"

      - name: Deploy on VPS via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
         host: ${{ secrets.VPS_HOST }}
         username: ${{ secrets.VPS_USER }}
         key: ${{ secrets.VPS_KEY }}
         script: |
           # Navegar para o diretório correto
           cd /home/${{ secrets.VPS_USER }}/
           
           # Baixar imagem
           docker pull ${{ secrets.DOCKERHUB_USER }}/arcobatrip-api:latest
           
           # Parar e remover container existente
           docker compose -f docker-compose.prod.yml down || true
           
           # Criar arquivo .env para docker-compose
           cat > .env << EOF
           NODE_ENV=production
           PORT=3000
           TYPEORM_HOST=${{ secrets.TYPEORM_HOST }}
           TYPEORM_PORT=${{ secrets.TYPEORM_PORT }}
           TYPEORM_USERNAME=${{ secrets.TYPEORM_USERNAME }}
           TYPEORM_PASSWORD=${{ secrets.TYPEORM_PASSWORD }}
           TYPEORM_DATABASE=${{ secrets.TYPEORM_DATABASE }}
           TYPEORM_SYNC=${{ secrets.TYPEORM_SYNC }}
           EOF
           
           # Subir o serviço
           docker compose -f docker-compose.prod.yml up -d